



#DML scripts: 


DROP TABLE IF EXISTS UserActivity ;

CREATE TABLE UserActivity (

    id INT,

    activity_time DATETIME,

    type VARCHAR(20)

);



INSERT INTO UserActivity (id, activity_time, type) VALUES

-- Day 1

(1, '2024-10-01 08:00:00', 'log in'),

(1, '2024-10-01 08:15:30', 'scroll'),

(1, '2024-10-01 08:30:00', 'log out'),

(1, '2024-10-01 12:00:00', 'log in'),

(1, '2024-10-01 12:10:30', 'scroll'),

(1, '2024-10-01 12:30:00', 'log out'),

(2, '2024-10-01 09:00:00', 'log in'),

(2, '2024-10-01 09:15:45', 'scroll'),

(2, '2024-10-01 09:45:00', 'log out'),

(2, '2024-10-01 14:30:00', 'log in'),

(2, '2024-10-01 14:50:00', 'scroll'),

(2, '2024-10-01 15:30:00', 'log out'),

(3, '2024-10-01 07:45:00', 'log in'),

(3, '2024-10-01 08:00:00', 'scroll'),

(3, '2024-10-01 08:30:00', 'log out'),

(3, '2024-10-01 11:15:00', 'log in'),

(3, '2024-10-01 11:25:00', 'scroll'),

(3, '2024-10-01 12:00:00', 'log out'),



-- Day 2

(1, '2024-10-02 09:00:00', 'log in'),

(1, '2024-10-02 09:20:00', 'scroll'),

(1, '2024-10-02 09:40:00', 'log out'),

(1, '2024-10-02 14:00:00', 'log in'),

(1, '2024-10-02 14:15:00', 'scroll'),

(1, '2024-10-02 14:45:00', 'log out'),

(2, '2024-10-02 08:30:00', 'log in'),

(2, '2024-10-02 08:50:00', 'scroll'),

(2, '2024-10-02 09:15:00', 'log out'),

(2, '2024-10-02 12:45:00', 'log in'),

(2, '2024-10-02 13:10:00', 'scroll'),

(2, '2024-10-02 14:30:00', 'log out'),

(3, '2024-10-02 07:30:00', 'log in'),

(3, '2024-10-02 07:50:00', 'scroll'),

(3, '2024-10-02 08:20:00', 'log out'),

(3, '2024-10-02 10:00:00', 'log in'),

(3, '2024-10-02 10:15:00', 'scroll'),

(3, '2024-10-02 10:45:00', 'log out');

# Solution
with cte as (
select *,lead(activity_time)over(partition by id order by activity_time) as next_day,lead(type)over(partition by id order by activity_time) as type1 from UserActivity
where type != 'scroll'),

cte1 as (select id,Day(activity_time) as Day1,SUM(datediff(minute,activity_time,next_day)) as Total_Minutes from cte
where type='log in'
group by id,Day(activity_time))

select id,(case when Avg(total_minutes)>=60 and Avg(total_minutes)<90 then 'LightUser'
when Avg(total_minutes)>=90 and Avg(total_minutes)<120 then 'MediumUser' else 'HeavyUser' END) As User_Activity  from cte1
group by id
