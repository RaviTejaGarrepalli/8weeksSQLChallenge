
DML Scripts:

CREATE TABLE city_population (
    state VARCHAR(50),
    city VARCHAR(50),
    population INT
);

-- Insert the data
INSERT INTO city_population (state, city, population) VALUES ('haryana', 'ambala', 100);
INSERT INTO city_population (state, city, population) VALUES ('haryana', 'panipat', 200);
INSERT INTO city_population (state, city, population) VALUES ('haryana', 'gurgaon', 300);
INSERT INTO city_population (state, city, population) VALUES ('punjab', 'amritsar', 150);
INSERT INTO city_population (state, city, population) VALUES ('punjab', 'ludhiana', 400);
INSERT INTO city_population (state, city, population) VALUES ('punjab', 'jalandhar', 250);
INSERT INTO city_population (state, city, population) VALUES ('maharashtra', 'mumbai', 1000);
INSERT INTO city_population (state, city, population) VALUES ('maharashtra', 'pune', 600);
INSERT INTO city_population (state, city, population) VALUES ('maharashtra', 'nagpur', 300);
INSERT INTO city_population (state, city, population) VALUES ('karnataka', 'bangalore', 900);
INSERT INTO city_population (state, city, population) VALUES ('karnataka', 'mysore', 400);
INSERT INTO city_population (state, city, population) VALUES ('karnataka', 'mangalore', 200);


# Solution 1:
with cte as (select *,rank()over(partition by state order by population desc) as rnk
from city_population)
select state
,max(case when rnk=1 then city END) as [city max(population)]
,min(case when rnk=3 then city END) as [city min(population)]
from cte
group by state

# Solution 2:
with cte as (select state,max(population) as Max_population,min(population) as Min_population from city_population
group by state)
select cte.state,c1.city as [city max(population)],c2.city as [city min(population)]
from cte 
left join city_population c1 on (c1.population=cte.Max_population and c1.state=cte.state)
left join city_population c2 on (c2.population=cte.Min_population and c2.state=cte.state)
